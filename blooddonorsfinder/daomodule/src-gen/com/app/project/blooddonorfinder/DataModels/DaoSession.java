package com.app.project.blooddonorfinder.DataModels;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.app.project.blooddonorfinder.DataModels.Donor;
import com.app.project.blooddonorfinder.DataModels.Hospital;
import com.app.project.blooddonorfinder.DataModels.Transaction;

import com.app.project.blooddonorfinder.DataModels.DonorDao;
import com.app.project.blooddonorfinder.DataModels.HospitalDao;
import com.app.project.blooddonorfinder.DataModels.TransactionDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig donorDaoConfig;
    private final DaoConfig hospitalDaoConfig;
    private final DaoConfig transactionDaoConfig;

    private final DonorDao donorDao;
    private final HospitalDao hospitalDao;
    private final TransactionDao transactionDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        donorDaoConfig = daoConfigMap.get(DonorDao.class).clone();
        donorDaoConfig.initIdentityScope(type);

        hospitalDaoConfig = daoConfigMap.get(HospitalDao.class).clone();
        hospitalDaoConfig.initIdentityScope(type);

        transactionDaoConfig = daoConfigMap.get(TransactionDao.class).clone();
        transactionDaoConfig.initIdentityScope(type);

        donorDao = new DonorDao(donorDaoConfig, this);
        hospitalDao = new HospitalDao(hospitalDaoConfig, this);
        transactionDao = new TransactionDao(transactionDaoConfig, this);

        registerDao(Donor.class, donorDao);
        registerDao(Hospital.class, hospitalDao);
        registerDao(Transaction.class, transactionDao);
    }
    
    public void clear() {
        donorDaoConfig.getIdentityScope().clear();
        hospitalDaoConfig.getIdentityScope().clear();
        transactionDaoConfig.getIdentityScope().clear();
    }

    public DonorDao getDonorDao() {
        return donorDao;
    }

    public HospitalDao getHospitalDao() {
        return hospitalDao;
    }

    public TransactionDao getTransactionDao() {
        return transactionDao;
    }

}
